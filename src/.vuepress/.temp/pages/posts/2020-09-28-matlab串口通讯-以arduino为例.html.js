export const data = JSON.parse("{\"key\":\"v-33b859b5\",\"path\":\"/posts/2020-09-28-matlab%E4%B8%B2%E5%8F%A3%E9%80%9A%E8%AE%AF-%E4%BB%A5arduino%E4%B8%BA%E4%BE%8B.html\",\"title\":\"MATLAB串口通讯——以Arduino为例\",\"lang\":\"zh-CN\",\"frontmatter\":{\"title\":\"MATLAB串口通讯——以Arduino为例\",\"author\":\"WHL\",\"slug\":\"matlab串口通讯-以arduino为例\",\"comments\":\"no\",\"images\":null,\"category\":[\"个人\"],\"tag\":[\"单片机\"],\"description\":\"Arduino代码 每10s发送一次\\\"Hello World!\\\"给上位机，当收到上位机的任意字符串string，返回received string。 String inputString = \\\"recieved \\\"; bool stringComplete = false; void setup() { pinMode(LED_BUILTIN, OUTPUT); Serial.begin(9600); inputString.reserve(200); } void loop() { analogWrite(LED_BUILTIN, 150); delay(10000); Serial.println(\\\"Hello World!\\\"); if (stringComplete) { Serial.println(inputString); inputString = \\\"recieved \\\"; stringComplete = false; } } void serialEvent() { while (Serial.available()) { char inChar = (char)Serial.read(); inputString += inChar; if (inChar == '\\\\n') { stringComplete = true; } } }\"},\"headers\":[],\"readingTime\":{\"minutes\":1.28,\"words\":383},\"filePathRelative\":\"posts/2020-09-28-matlab串口通讯-以arduino为例.md\",\"excerpt\":\"<p>Arduino代码</p>\\n<p>每10s发送一次\\\"Hello World!\\\"给上位机，当收到上位机的任意字符串string，返回received string。</p>\\n<div class=\\\"language-text line-numbers-mode\\\" data-ext=\\\"text\\\"><pre c=\\\"\\\" class=\\\"language-text\\\"><code>String inputString = \\\"recieved \\\";\\nbool stringComplete = false;\\n\\nvoid setup() {\\n  pinMode(LED_BUILTIN, OUTPUT);\\n  Serial.begin(9600);\\n  inputString.reserve(200);\\n}\\n\\nvoid loop() {\\n  analogWrite(LED_BUILTIN, 150);\\n  delay(10000);\\n  Serial.println(\\\"Hello World!\\\");\\n  if (stringComplete) {\\n    Serial.println(inputString);\\n    inputString = \\\"recieved \\\";\\n    stringComplete = false;\\n  }\\n}\\n\\nvoid serialEvent() {\\n  while (Serial.available()) {\\n    char inChar = (char)Serial.read();\\n    inputString += inChar;\\n    if (inChar == '\\\\n') {\\n      stringComplete = true;\\n    }\\n  }\\n}\\n</code></pre><div class=\\\"line-numbers\\\" aria-hidden=\\\"true\\\"><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div></div></div>\",\"autoDesc\":true}")

if (import.meta.webpackHot) {
  import.meta.webpackHot.accept()
  if (__VUE_HMR_RUNTIME__.updatePageData) {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  }
}

if (import.meta.hot) {
  import.meta.hot.accept(({ data }) => {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  })
}
